name: Build
on:
  push:
    branches:
      - develop # or the name of your main branch

jobs:
  build:
    name: Build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0  # Shallow clones should be disabled for a better relevancy of analysis
      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          distribution: 'adopt'
          java-version: | 
            8
            11
            17
      - name: Cache SonarQube packages
        uses: actions/cache@v1
        with:
          path: ~/.sonar/cache
          key: ${{ runner.os }}-sonar
          restore-keys: ${{ runner.os }}-sonar
      - name: Cache Maven packages
        uses: actions/cache@v1
        with:
          path: ~/.m2
          key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-m2
      - name: Build with Java 17
        env:
          JAVA_HOME: /opt/hostedtoolcache/Java_Adopt_jdk/17.0.8-7/x64
        run: ./mvnw clean install
      - name: Build and analyze
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}  # Needed to get PR information, if any
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
          SONAR_HOST_URL: ${{ secrets.SONAR_HOST_URL }}
        run: mvn -B verify org.sonarsource.scanner.maven:sonar-maven-plugin:sonar -Dsonar.projectKey=webgoat -Dsonar.login=${{ secrets.SONAR_TOKEN }} -DskipTests
      - name: Generate SBOM
        if: always()
        shell: bash
        run: |
          mvn -Dmaven.test.skip org.cyclonedx:cyclonedx-maven-plugin:makeAggregateBom
      - uses: actions/upload-artifact@v3
        if: always()
        with:
          name: SBOM Artifact
          path: target/bom.xml
